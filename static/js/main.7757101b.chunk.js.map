{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","style","container","containerForm","this","containerLabel","input","type","autoComplete","pattern","title","onChange","button","Component","ContactsList","contacts","onDeleteContact","contactsList","map","id","contactsItem","contactsForm","contactsName","buttonContacts","onClick","uuidv4","Filter","filter","filterLabel","filterInput","App","contactArr","addContacts","data","find","contact","toLowerCase","alert","prevState","changeFilter","getVisibleContact","normalizedFilter","includes","deleteContact","contactId","visibleContacts","phonebook","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7757101b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__1RNk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1-Ctw\"};","import React, { Component } from 'react';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div className={style.container}>\n        <form className={style.containerForm} onSubmit={this.handleSubmit}>\n          <label className={style.containerLabel}>\n            Name\n            <input\n              className={style.input}\n              type=\"text\"\n              autoComplete=\"off\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={style.containerLabel}>\n            Number\n            <input\n              className={style.input}\n              type=\"tel\"\n              autoComplete=\"off\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={style.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import style from './ContactList.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({contacts, onDeleteContact}) => (\r\n    <div className={style.contacts}>\r\n<ul className={style.contactsList}>\r\n        {contacts.map(({id, name, number}) => (\r\n            <li key={uuidv4()} className={style.contactsItem}>\r\n                <p className={style.contactsForm}>\r\n                    <span className={style.contactsName}>{name}</span>: {number}\r\n                <button className={style.buttonContacts} type=\"button\" onClick={() => onDeleteContact(id)}>Delete</button>\r\n            </p>\r\n            </li>\r\n        ))}\r\n        </ul>\r\n    </div>\r\n\r\n);\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactsList;","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <div className={style.filter}>\r\n        <label className={style.filterLabel}>Find contact by name\r\n        <input className={style.filterInput}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                name=\"name\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            </label>\r\n    </div>\r\n\r\n);\r\n\r\nFilter.propTypes = {\r\nvalue: PropTypes.string.isRequired,\r\nonChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport style from './App.module.css';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nimport contactArr from './contacts.json';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: contactArr,\r\n    filter: ''\r\n  };\r\n\r\n  addContacts = data => {\r\n    const { name } = data;\r\n    const { contacts } = this.state;\r\n    const inputName = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n    \r\n    if (inputName) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, data]\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(prevState => ({\r\n  contacts: prevState.contacts.filter(contact => contact.id !== contactId)\r\n}))\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getVisibleContact();\r\n    return (\r\n      <div className={style.phonebook}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContacts} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter}/>\r\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__NM5vP\",\"buttonContacts\":\"ContactList_buttonContacts__2jJs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2SNJU\",\"filterInput\":\"Filter_filterInput__7cCWg\"};"],"sourceRoot":""}